AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  echo
  SAM Template for echo

Globals:
  Function:
    Timeout: 60
    MemorySize: 256

    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  
  MyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers
      CompatibleRuntimes:
        - python3.11
  
  LibLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: LibLayer
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11

  CreatePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreatePostFunction/
      Handler: create_post.lambda_handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Layers:
      - !Ref MyLayer
      - !Ref LibLayer
      Environment:
        Variables:
          ENV: !Ref Env
          MONGO_DB_ID: !Ref MongoDBId
          MONGO_DB_PWD: !Ref MongoDBPwd
      Events:
        Forum:
          Type: Api
          Properties:
            Path: /create-post
            Method: post
  
  CreateProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateProfileFunction/
      Handler: create_profile.lambda_handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Layers:
      - !Ref MyLayer
      - !Ref LibLayer
      Environment:
        Variables:
          ENV: !Ref Env
          MONGO_DB_ID: !Ref MongoDBId
          MONGO_DB_PWD: !Ref MongoDBPwd
      Events:
        Forum:
          Type: Api
          Properties:
            Path: /create-profile
            Method: post

  CreateReactionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateReactionFunction/
      Handler: create_reaction.lambda_handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Layers:
      - !Ref MyLayer
      - !Ref LibLayer
      Environment:
        Variables:
          ENV: !Ref Env
          MONGO_DB_ID: !Ref MongoDBId
          MONGO_DB_PWD: !Ref MongoDBPwd
      Events:
        Forum:
          Type: Api
          Properties:
            Path: /create-reaction
            Method: post

  ReadForumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ReadForumFunction/
      Handler: read_forum.lambda_handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Layers:
      - !Ref MyLayer
      - !Ref LibLayer
      Environment:
        Variables:
          ENV: !Ref Env
          MONGO_DB_ID: !Ref MongoDBId
          MONGO_DB_PWD: !Ref MongoDBPwd
      Events:
        Forum:
          Type: Api
          Properties:
            Path: /read-forum
            Method: get

  ReadProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ReadProfileFunction/
      Handler: read_profile.lambda_handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Layers:
      - !Ref MyLayer
      - !Ref LibLayer
      Environment:
        Variables:
          ENV: !Ref Env
          MONGO_DB_ID: !Ref MongoDBId
          MONGO_DB_PWD: !Ref MongoDBPwd
      Events:
        Forum:
          Type: Api
          Properties:
            Path: /read-profile
            Method: get

Parameters:
  MongoDBId:
    Type: String
  MongoDBPwd:
    Type: String
  Env:
    Type: String

Outputs:
  MyLayer:
    Description: "Local Packages Layer"
    Value: !Ref MyLayer
    Export:
      Name: !Sub '${AWS::StackName}-MyLayerArn'
  
  LibLayer:
    Description: "Layer containing following libraries: pymongo"
    Value: !Ref LibLayer
    Export:
      Name: !Sub '${AWS::StackName}-LibLayer'
 
  CreatePostApi:
    Description: API Gateway endpoint URL for Prod stage for Create Post function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create-post/"
  CreatePostFunction:
    Description: Create Post Lambda Function ARN
    Value: !GetAtt CreatePostFunction.Arn
  CreatePostFunctionIamRole:
    Description: Implicit IAM Role created for Create Post function
    Value: !GetAtt CreatePostFunctionRole.Arn

  CreateProfileApi:
    Description: API Gateway endpoint URL for Prod stage for Create Profile function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create-profile/"
  CreateProfileFunction:
    Description: Create Profile Lambda Function ARN
    Value: !GetAtt CreateProfileFunction.Arn
  CreateProfileFunctionIamRole:
    Description: Implicit IAM Role created for Create Profile function
    Value: !GetAtt CreateProfileFunctionRole.Arn

  CreateReactionApi:
    Description: API Gateway endpoint URL for Prod stage for Create Reaction function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create-reaction/"
  CreateReactionFunction:
    Description: Create Reaction Lambda Function ARN
    Value: !GetAtt CreateReactionFunction.Arn
  CreateReactionFunctionIamRole:
    Description: Implicit IAM Role created for Create Reaction function
    Value: !GetAtt CreateReactionFunctionRole.Arn
  
  ReadForumApi:
    Description: API Gateway endpoint URL for Prod stage for Read Forum function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read-forum/"
  ReadForumFunction:
    Description: Read Forum Lambda Function ARN
    Value: !GetAtt ReadForumFunction.Arn
  ForumProfileFunctionIamRole:
    Description: Implicit IAM Role created for Read Forum function
    Value: !GetAtt ReadForumFunctionRole.Arn

  ReadProfileApi:
    Description: API Gateway endpoint URL for Prod stage for Read Profile function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read-profile/"
  ReadProfileFunction:
    Description: Read Profile Lambda Function ARN
    Value: !GetAtt ReadProfileFunction.Arn
  ReadProfileFunctionIamRole:
    Description: Implicit IAM Role created for Read Profile function
    Value: !GetAtt ReadProfileFunctionRole.Arn
